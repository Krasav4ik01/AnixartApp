//
//  AnimeModel.swift
//  Anixart
//
//  Created by Rustem on 05.12.2022.
//

import Foundation
import UIKit

struct AnimeModel{
    let id: Int
    let title: String
    let desc: String
    let episodes: Int
    let rate: Double
    let image = UIImageView()
}


//func getAnimeNames() -> UILabel{
//    let name1 = UILabel()
//    name1.text = "Человек Бензопила"
//    let name2 = UILabel()
//    name2.text = "Атака Титанов"
//    let name3 = UILabel()
//    name3.text = "Наруто"
//    let name4 = UILabel()
//    name4.text = "Стальной Алхимик"
//    let name5 = UILabel()
//    name5.text = "Реинкарнация безработного"
//    let name6 = UILabel()
//    name6.text = "Убийца Акаме"
//    let name7 = UILabel()
//    name7.text = "О моем перерождений в слизь"
//    let name8 = UILabel()
//    name8.text = "Старша школа ДхД"
//    let name9 = UILabel()
//    name9.text = "Семья шпиона"
//    let name10 = UILabel()
//    name10.text = "Моя героиская академия"
//
//    return name1
//}
struct GenerateAnimeData{
    public func getAnimeName() -> [String]{
        let name:[String] = ["Человек Бензопила","Атака Титанов","Наруто","Стальной Алхимик","Реинкарнация безработного","Убийца Акаме","О моем перерождений","Старша школа ДхД","Семья шпиона","Моя геройская академия"]
        return name
    }
    public func getAnimeEpisodes() -> [String]{
        let episode:[String] = ["8 из 12 эп •","10 из 12 эп •","12 из 12 эп •","23 из 24 эп •","15 из 36 эп •","2 из 24 эп •","500 из 500 эп •","5 из 37 эп •","1 из 10 эп •","9 из 13 эп •"]
        return episode
    }
    public func getAnimeRates() -> [String]{
        let rate:[String] = [" 4.9☆"," 4.7☆"," 4.8☆"," 4.5☆"," 4.3☆"," 4.5☆"," 4.0☆"," 4.8☆"," 4.2☆"," 4.9☆"]
        return rate
    }
    public func getAnimeDesc() -> [String]{
        let desc:[String] = [" Познакомьтесь с Наруто Узумаки – юным ниндзя, которому предстоит пройти долгий путь к своей мечте. Однако для достижения любой цели нужны верные товарищи, которых Наруто предстоит обрести. Эта история о том, как найти в себе силы не сдаваться, когда никто вокруг не верит в успех. А ещё это исключительная и неповторимая в своём роде классика – самое занимательное приключение ниндзя всех времён!","Два главных героя, братья Эдвард и Альфонс Элрики, потерпев провал в попытке с помощью алхимии воскресить свою умершую мать, ищут легендарный философский камень, чтобы вернуть руку и ногу Эдварда и тело Альфонса, утраченные в ходе неудачной трансмутации.","Эрен Йегер присоединяется к полку скаутов, чтобы сражаться и истреблять титанов, расу гигантских человекоподобных монстров, которые однажды напали на его деревню и убили всех, кого он любил.","Мечник Тацуми, простой парнишка из сельской местности отправляется в столицу, чтобы заработать денег для своей голодающей деревни. А добравшись дотуда, узнает, что великая и красивая столица - лишь видимость."," Сатору Миками, обычный одинокий 37-летний офисный работник из Токио, становится жертвой случайного нападения на улице. После смерти от удара ножом он, перевоплотившись в слизь, практически сразу пробуждается в другом мире, в котором получает способности, соответствующие желаниям, проносившимся в его голове в последние мгновения жизни. Также в этом мире он может изучать способности и поглощать других существ чтобы овладеть их навыками.","Исследуя новый мир, Сатору сталкивается с драконом Вельдорой, заключённым в тюрьму, и быстро находит с ним общий язык. От дракона он узнаёт о том, какую силу в этом мире монстрам дают имена — данные кем-либо могущественным, они могут наделить обладателя новыми силами или позволить ему эволюционировать в более продвинутую сущность. Получив от дракона новое имя Римуру, он поглощает тюрьму дракона и отправляется искать способ освободить Вельдору.","Исчезновение дракона вносит изменения в окрестные земли и политику соседних стран. Постепенно Римуру встаёт во главе сначала селения гоблинов, затем присоединяет к ним других обитателей леса, сталкивается с различными противниками и проблемами, строит собственный город в середине леса Джуры и вслед за этим основывает федерацию из всех обитателей леса","Появившаяся в результате страна монстров вызывает смешанную реакцию среди государств людей. В результате нападения соседнего королевства Фармус Римуру становится одним из могущественных князей тьмы этого мира и сталкивается с политическими интригами людей и других князей, а также с противодействием церкви богини Люминус, чья религия строится на идее уничтожения монстров. Постепенно он укрепляет положение новой федерации в мире, решая проблемы одну за другой.","Могучий дракон, один из четырех истинных драконов, который подружился с Римуру. Вельдора оказался в ловушке «Бесконечной тюрьмы», заточённый великим героем. Римуру взялся помочь ему вырваться из неё.","Большинство обитателей леса Джуры монстры и в ходе истории они становятся подданными Римуру, клянясь ему в верности и принимая от него имена. Получившие имена монстры становятся «названными» и эволюционируют в зависимости от силы того, кто их назвал. Назначение на определенную должность также помогает монстрам развиваться в определенном направлении. Все монстры под командованием Римуру также эволюционируют еще раз, когда он становится князем тьмы."]
        return desc
    }
    public func getAnimeImages() -> [String]{
        let image:[String] = ["chainsawman2","akame","job_less","attack_on_titan","naruto","spyXfamily","full_metal","my_hero","dxd","isekai"]
        return image
    }
    public func getAnimeComments() -> [String]{
        let image:[String] = ["209 коммент. за сутки","1365 коммент. за сутки","2693 коммент. за сутки","153 коммент. за сутки","540 коммент. за сутки","409 коммент. за сутки","903 коммент. за сутки","201 коммент. за сутки","302 коммент. за сутки","4012 коммент. за сутки"]
        return image
    }
    
    public func getAnimeImagesForComments() -> [String]{
        let image:[String] = ["spyFamily","chainsawman", "power", "fma"]
        return image
    }
    
    public func getAnimeNavigationTitles() -> [String]{
        let titles:[String] = ["Моя вкладка","Последнее", "Онгоинги", "Анонсы", "Завершенное", "Фильмы"]
        return titles
    }
    
    public func getAnimeDates() -> [String]{
        let date:[String] = ["6 дек. в 21:00","5 янв. в 18:00", "1 апр. в 13:50", "4 окт. в 15:45", "13 фев. в 05:21", "25 мар. в 14:15","18 окт. в 15:35", "10 фев. в 20:00", "15 мар. в 23:00"]
        return date
    }
    
    public func getAnimeEpisodeCounts() -> [String]{
        let eps:[String] = ["6","5", "1", "4", "13", "25","18", "10", "150","12", "20","8", "9", "2"]
        return eps
    }
}

